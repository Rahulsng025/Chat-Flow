{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/authentication/login/login.component.html","./src/app/authentication/login/login.component.ts","./src/app/authentication/profile/profile.component.ts","./src/app/authentication/register/register.component.html","./src/app/authentication/register/register.component.ts","./src/app/chat/chat.component.html","./src/app/chat/chat.component.ts","./src/app/gaurds/auth-gaurd.guard.ts","./src/app/service/auth.service.ts","./src/app/service/chat.service.ts","./src/app/service/validate.service.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './authentication/login/login.component';\nimport { RegisterComponent } from './authentication/register/register.component';\n\n\n const routes: Routes = [\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<flash-messages></flash-messages>\n<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\nimport { ChatService } from './service/chat.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  user:String;\n  room:String;\n  messageText:String;\n  messageArray:Array<{user:String,message:String}> = [];\n\n  constructor(private _chatService:ChatService){\n    // For receving messages\n    // After all we are using observables, So we'have to subscribe to this particular method of a service\n    this._chatService.newUserJoined()\n    .subscribe(data=> this.messageArray.push(data));\n\n      this._chatService.userLeftRoom()\n      .subscribe(data=>this.messageArray.push(data));\n\n      this._chatService.newMessageReceived()\n      .subscribe(data=>this.messageArray.push(data));\n\n  }\n\n  join(){\n    this._chatService.joinRoom({user:this.user, room:this.room});\n}\n\nleave(){\n    this._chatService.leaveRoom({user:this.user, room:this.room});\n}\n\nsendMessage()\n{\n    this._chatService.sendMessage({user:this.user, room:this.room, message:this.messageText});\n}\n\n\n \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './authentication/auth/auth.component';\nimport { LoginComponent } from './authentication/login/login.component';\nimport { RegisterComponent } from './authentication/register/register.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ChatComponent } from './chat/chat.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthService } from './service/auth.service';\nimport { ValidateService } from './service/validate.service';\nimport { FlashMessagesModule } from 'flash-messages-angular';\nimport { ProfileComponent } from './authentication/profile/profile.component';\nimport { AuthGaurdGuard } from './gaurds/auth-gaurd.guard';\nimport { SocialLoginModule, SocialAuthServiceConfig } from 'angularx-social-login';\nimport {\n  GoogleLoginProvider,\n  FacebookLoginProvider\n} from 'angularx-social-login';\n\n// FireBase Google Login\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { environment } from 'src/environments/environment';\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component:RegisterComponent },\n  {path: 'chat', component: ChatComponent, canActivate: [AuthGaurdGuard]},\n  {path: 'profile', component: ProfileComponent},\n  {path:'', redirectTo: '/login', pathMatch: 'full'}\n]\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    LoginComponent,\n    RegisterComponent,\n    ChatComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    RouterModule.forRoot(routes),\n    FlashMessagesModule.forRoot(),\n    HttpClientModule,\n    SocialLoginModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireAuthModule\n  \n  ],\n  providers: [ValidateService, AuthService, AuthGaurdGuard,\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: false,\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider(\n              '800596385766-dj3knbe81phidod2655ldo5iplmhos27.apps.googleusercontent.com'\n            )\n          },\n          // {\n          //   id: FacebookLoginProvider.PROVIDER_ID,\n          //   provider: new FacebookLoginProvider('clientId')\n          // }\n        ]\n      } as SocialAuthServiceConfig,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<body>\n  <img class=\"wave\" src=\"../../../assets/wave.png\" />\n  <div class=\"login-wrapper\">\n    <div class=\"img\">\n      <img src=\"../../../assets/bg.svg\" />\n    </div>\n    <div class=\"login-content\">\n      <form (submit)=\"onLoginSubmit()\" action=\"\" class=\"form\">\n        <img src=\"../../../assets/avatar.svg\" alt=\"\" />\n        <h2 class=\"title\">Login</h2>\n\n        <div class=\"input-group\">\n          <input\n            type=\"text\"\n            [(ngModel)]=\"username\"\n            name=\"username\"\n            id=\"username\"\n            required\n          />\n          <label for=\"username\">Username</label>\n        </div>\n        <div class=\"input-group\">\n          <input\n            type=\"password\"\n            [(ngModel)]=\"password\"\n            name=\"password\"\n            id=\"password\"\n            required\n          />\n          <label for=\"password\">Password</label>\n        </div>\n        <input type=\"submit\" value=\"Login\" class=\"btn\" />\n        <a class=\"forgot-pw\">Don't have account?</a> <br />\n        <!-- Google login logo-->\n        <div class=\"google-login\">\n          <button class=\"btn btn-success\" (click)=\"signInWithGoogle()\">\n            Google\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</body>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../service/auth.service';\nimport { FlashMessagesService } from 'flash-messages-angular';\nimport { SocialUser, GoogleLoginProvider } from 'angularx-social-login';\nimport { SocialAuthService } from 'angularx-social-login';\nimport { HttpClient } from '@angular/common/http';\n// Firebase\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport firebase from 'firebase/app';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n  email:String;\n  user: SocialUser | null;\n  GoogleAuth : String; // Google Auth object.\n  gapi: any;\n\n  constructor(private _authService: AuthService, \n    private router:Router,\n    private _flashMessageService: FlashMessagesService,\n    private _socialAuthService: SocialAuthService,\n    private http: HttpClient,\n    public afAuth: AngularFireAuth) { }\n\n  ngOnInit(): void { \n  }\n\n  onLoginSubmit(){\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n    this._authService.authenticateUser(user).subscribe(data => {\n      if(data.success){\n        this._authService.storeUserData(data.token, data.user)\n        this._flashMessageService.show('You are now logged in!', { cssClass: 'alert-success', timeout: 3000 })\n        this.router.navigate(['chat']);\n      }\n      else{\n        this._flashMessageService.show(data.msg, { cssClass: 'alert-success', timeout: 3000 });\n        this.router.navigate(['login']);\n      }\n      console.log(data);\n    })\n  }\n\n  signInWithGoogle(): any{\n  //   this._socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID).then(\n  //   (user) => {\n  //       this.router.navigate(['chat']);\n  //     this._authService.googleSignIn(user.idToken).subscribe(\n  //      (res)=> {\n  //        console.log(res)\n  //       },\n  //       (err) => {\n  //         console.log(err)\n  //       }\n  //     )\n  //   console.log()\n      \n  //  })\n  // const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n  // this.afAuth.signInWithPopup(googleAuthProvider);\n  // this.router.navigate(['chat']);\n     }\n\n    //  signOut() {\n    //    this.afAuth.signOut();\n    //  }\n\n    \n  }\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  user: Object;\n  constructor(private _authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this._authService.getProfile().subscribe(profile => {\n      this.user = profile.user\n    }, \n    err => {\n      console.log(err);\n      return false;\n    })\n  }\n\n}\n","<body>\n  <img class=\"wave\" src=\"../../../assets/wave.png\" />\n  <div class=\"login-wrapper\">\n    <div class=\"img\">\n      <img src=\"../../../assets/bg.svg\" />\n    </div>\n    <div class=\"login-content\">\n      <form (submit)=\"onRegister()\" action=\"\" class=\"form\">\n        <img src=\"../../../assets/avatar.svg\" alt=\"\" />\n        <h2 class=\"title\">Register</h2>\n        <div class=\"input-group\">\n          <input\n            type=\"text\"\n            id=\"name\"\n            [(ngModel)]=\"name\"\n            name=\"name\"\n            required\n          />\n          <label for=\"name\">Name</label>\n        </div>\n        <div class=\"input-group\">\n          <input\n            type=\"text\"\n            [(ngModel)]=\"username\"\n            name=\"username\"\n            id=\"username\"\n            required\n          />\n          <label for=\"username\">Username</label>\n        </div>\n        <div class=\"input-group\">\n          <input\n            type=\"text\"\n            [(ngModel)]=\"email\"\n            name=\"email\"\n            id=\"email\"\n            required\n          />\n          <label for=\"email\">Email</label>\n        </div>\n        <div class=\"input-group\">\n          <input\n            type=\"text\"\n            [(ngModel)]=\"password\"\n            name=\"password\"\n            id=\"password\"\n            required\n          />\n          <label for=\"password\">Password</label>\n        </div>\n        <input type=\"submit\" class=\"btn\" value=\"submit\" />\n      </form>\n    </div>\n  </div>\n</body>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ValidateService } from 'src/app/service/validate.service';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { FlashMessagesService } from 'flash-messages-angular';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  name: string;\n  username: string;\n  email: string;\n  password: string\n\n  constructor(private _authService: AuthService,\n    private _validateService: ValidateService,\n    private router: Router,\n    private _flashMessageService: FlashMessagesService) { }\n\n  ngOnInit(): void {\n  }\n\n  onRegister() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    }\n\n    // Validate Register\n    if(!this._validateService.validateRegister(user)){\n      this._flashMessageService.show('Please fill in all fields!', { cssClass: 'alert-danger', timeout: 3000 })\n      return false;\n    }\n    // Validate Email \n    if(!this._validateService.validateEmail(user.email)){\n      this._flashMessageService.show('Please use a valid email!', { cssClass: 'alert-danger', timeout: 3000 })\n      return false;\n    }\n\n    // Register User\n    this._authService.registerUser(user).subscribe(data => {\n      if(data) {\n        this._flashMessageService.show('You are now registered and can now login!', { cssClass: 'alert-success', timeout: 3000 })\n        this.router.navigate(['/login']);\n      }\n      else{\n        this._flashMessageService.show('Something went wrong!', { cssClass: 'alert-danger', timeout: 3000 })\n        this.router.navigate(['/register']);\n      }\n     \n      \n    })\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <h2 style=\"margin-left: 550px\">Real Time Chat Application</h2>\n    <hr />\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm-5\">\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          type=\"text\"\n          [(ngModel)]=\"user\"\n          class=\"form-control\"\n          id=\"username\"\n          placeholder=\"Enter username\"\n        />\n        <!-- <small id=\"userHelp\" class=\"form-text text-muted\">Type your username.</small> -->\n      </div>\n    </div>\n    <div class=\"col-sm-5\">\n      <label for=\"roomInput\">Choose room</label>\n      <select\n        name=\"roomInput\"\n        id=\"roomInput\"\n        class=\"form-control\"\n        [(ngModel)]=\"room\"\n      >\n        <option value=\"Lobby\">Lobby</option>\n        <option value=\"Hall\">Hall</option>\n        <option value=\"Deluxe\">Deluxe</option>\n      </select>\n    </div>\n    <div class=\"col sm-2\">\n      <div style=\"margin-top: 19px\" class=\"pull-right\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"join()\">\n          Join\n        </button>\n        <button type=\"button\" class=\"btn btn-default\" (click)=\"leave()\">\n          Leave\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"well\" style=\"height: 200px; padding: 15px\">\n      <div *ngFor=\"let item of messageArray\">\n        <span\n          ><strong>{{ item.user }} : </strong> {{ item.message }}</span\n        >\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm-10\">\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"messageText\" />\n    </div>\n    <div class=\"col-sm-2\">\n      <button\n        type=\"button\"\n        class=\"btn btn-success pull-right\"\n        (click)=\"sendMessage()\"\n      >\n        Send\n      </button>\n    </div>\n    <div class=\"col-sm-2\">\n      <button\n        type=\"button\"\n        class=\"btn btn-success pull-right\"\n        (click)=\"onLogoutClick()\"\n      >\n        Logout\n      </button>\n      <button\n        class=\"btn btn-success\"\n        *ngIf=\"afAuth.authState | async\"\n        (click)=\"signOut()\"\n      >\n        Google\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'flash-messages-angular';\nimport { AuthService } from '../service/auth.service';\nimport { ChatService } from '../service/chat.service';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport firebase from 'firebase/app';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit {\n\n  user:String;\n  room:String;\n  messageText:String;\n  messageArray:Array<{user:String,message:String}> = [];\n\n  constructor(private _chatService:ChatService,\n    private _authService: AuthService,\n    private router: Router,\n    private _flashMessageService: FlashMessagesService,\n    public afAuth: AngularFireAuth) {\n     // For receving messages\n    // After all we are using observables, So we'have to subscribe to this particular method of a service\n    this._chatService.newUserJoined()\n    .subscribe(data=> this.messageArray.push(data));\n\n      this._chatService.userLeftRoom()\n      .subscribe(data=>this.messageArray.push(data));\n\n      this._chatService.newMessageReceived()\n      .subscribe(data=>this.messageArray.push(data));\n   }\n\n  ngOnInit(): void {\n  }\n\n  join(){\n    this._chatService.joinRoom({user:this.user, room:this.room});\n}\n\nleave(){\n    this._chatService.leaveRoom({user:this.user, room:this.room});\n}\n\nsendMessage()\n{\n    this._chatService.sendMessage({user:this.user, room:this.room, message:this.messageText});\n}\n\nonLogoutClick() {\n  this._authService.logout();\n  this._flashMessageService.show('You are logged out', {\n    cssClass: 'alert-success', timeout: 3000\n  });\n  this.router.navigate(['/login']);\n  return false;\n}\n\nsignOut() {\n  this.afAuth.signOut();\n  this.router.navigate(['/login']);\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../service/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGaurdGuard implements CanActivate {\n  constructor(private _authService: AuthService, private router: Router) {}\n\n  canActivate(): boolean {\n    if (this._authService.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http'\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n  \n  constructor(private http: HttpClient) { }\n\n// Register User\nregisterUser(user):Observable<any>{\n  let headers = new HttpHeaders();\n  headers.append('Content-Type', 'application/json');\n  return this.http.post('user/register', user, {headers: headers})\n  \n}\n\n// Authenticate User\nauthenticateUser(user: {username: String; password: String}):Observable<any>{\n  let headers = new HttpHeaders();\n  headers.append('Content-Type', 'application/json');\n  return this.http.post('user/authenticate', user, { headers: headers })\n}\n\n// Get User Profile\ngetProfile():Observable<any>{\n  let headers = new HttpHeaders();\n  this.loadToken();\n  headers.append('Authorization', this.authToken);\n  headers.append('Content-Type', 'application/json');\n  return this.http.get('user/profile', { headers: headers })\n}\n\n// Store User Token\nstoreUserData(token, user){\n  localStorage.setItem('id_token', token);\n  localStorage.setItem('user', JSON.stringify(user));\n  this.authToken = token;\n  this.user = user;\n}\n\n// Load Token ID\nloadToken(){\n  const token = localStorage.getItem('id_token');\n  this.authToken = token;\n}\n\n// Login Method\nloggedIn() {\n  return !!localStorage.getItem('id_token'); // !!Return either true or false\n}\n\n// Logout Method\nlogout(){\n  this.authToken = null;\n  this.user = null;\n  localStorage.clear();\n}\n\n// Sign In With Google\n// googleSignIn(idToken){\n//  return this.http.post<any>(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithIdp?key=${AIzaSyA9hFskOR5PZ975xfRmYil60pZtYOqPAMQ}`, {\n//   postBody:`id_token=${idToken}&providerId=[google.com]`,\n//   requestUri:`http://localhost:4200`,\n//   returnIdpCredential:true,\n//   returnSecureToken:true\n//  })\n//  }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable } from 'rxjs';\nimport * as io from 'socket.io-client'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n  authToken: any;\n  user:any\n \n  constructor( ) { }\n\n  // Connection establised \n  // io socket is listening on the same socket where hhtp server in runnig on 3000\n  // private socket = io('http://localhost:3000');\n  private socket = io();\n\n  \n  joinRoom(data) {\n    this.socket.emit('join', data);\n  }\n\n  newUserJoined() {\n    let observable = new Observable<{user:string, message:string}>(observer => {\n      this.socket.on('new user joined', (data)=> {\n        observer.next(data);\n      });\n      return () => {this.socket.discconect();\n      }\n    })\n    return observable;\n  }\n\n  leaveRoom(data) {\n    this.socket.emit('leave', data);\n  }\n\n  userLeftRoom() {\n    let observable = new Observable<{user: String, message: String}>(observer => {\n        this.socket.on('left room', (data)=> {\n          observer.next(data);\n        });\n        return () => {this.socket.disconnect();}\n    });\n    return observable;\n  }\n\n  sendMessage(data) {\n    this.socket.emit('message', data);\n  }\n\n  newMessageReceived() {\n    let observable = new Observable<{user: String, message: String}>(observer => {\n      this.socket.on('new message', (data)=> {\n        observer.next(data);\n      });\n      return () => {this.socket.disconnect();}\n  });\n\n  return observable;\n}\n\n}\n\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  \n// Validate register\nvalidateRegister(user){\n  if(user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined) {\n    return false;\n  }\n  else {\n    return true\n  }\n}\n\n// Validate email\nvalidateEmail(email) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n  apiKey: \"AIzaSyA9hFskOR5PZ975xfRmYil60pZtYOqPAMQ\",\n  authDomain: \"chat-flow-325406.firebaseapp.com\",\n  projectId: \"chat-flow-325406\",\n  storageBucket: \"chat-flow-325406.appspot.com\",\n  messagingSenderId: \"800596385766\",\n  appId: \"1:800596385766:web:aba3128e23e57453f58027\",\n  measurementId: \"G-D9JY2NZ5C5\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}